# this is the cersion of YAML we are using with the Kubernetes API
apiVersion: apps/v1
# The kind is the type of Kubernetes resource we are using
# A deployment is when we run code on a a server
kind: Deployment
# Metadata is information related to the object we created in Kubernetes
metadata:
# The name here is the name of our deployment
  name: stedi-trenton
spec:
# Replicas refers to the number of pods we deploy
  replicas: 1
# A selector is a route to my pod
  selector:
# Match labels are a label for my selector
    matchLabels:
# App is a specific kind of label for my pod
      app: stedi-trenton
# The template describes all the features of my pod
  template:
# The metadata provides labels for my template
    metadata:
      labels:
        app: stedi-trenton
# The spec refers to the specification of my containers in my pod
    spec:
# Containers can have one or more Docker containers in the pod
      containers:
# The name of the container is specified below
        - name: stedi-trenton
# The image is a pre-built file contianing the operating system
          image: nginx
# The ports is a list of tcp ports the pod listens on
          ports:
# The container port is a specific port the pod listens on
            - containerPort: 80
# Resources are the copute resources used by the pod in the cloud
          resources:
# Limits represent the max amount of SPU that can be used by the pod
            limits:
# CPU is the max amount of SPU that can be used by the pod
              cpu: ".125"
# Memory is the max amount of memory that can be used by the pod
              memory: "500Mi"
# Requests is the minimum amount of compute resources used by the pod
            requests:
# CPU is the minimum amount of CPU the pod needs to run
              cpu: ".125"
# Memory is the minimum amount of memory the pod needs to run
              memory: "250Mi"
# LivenessProbe is a configuration that checks the pod for health
          livenessProbe:
# HttpGet instructs kubernetes to do an HTTP request to check health
            httpGet:
# Path defines the url to use when doing the HTTP request
              path: /
# Port defines the port to use when doing the HTTP request
              port: 80
# initialDelaySeconds tells Kubernetes to wait before doing a request
            initialDelaySeconds: 3
# periodSeconds tells Kubernetes how often to check health
            periodSeconds: 3
---

# apiVersion tells Kubernetes which version of yaml to use
apiVersion: v1
# kind tells Kubernetes what kind of obkect to create
kind: Service
# metadata contains attributes about the object
metadata:
# name is the name of the object we are creating
 name: stedi-trenton-loadbalancer
# spec is the specification for the object (or the laodbalancer)
spec:
# selector tells the netork layer how to find the right pod
  selector:
# app tells the selector which app to send traffic to
    app: stedi-trenton
# type tells Kubernetes the type of service we want
# a LoadBalancer distributes netowrk packets to one or more pods
  type: LoadBalancer
# ports are a list of ports the LoadBalancer listens on
  ports:
# port is the port we want to listen on the network
    - port: 80
# target is the prot the pod listens on inside Kubernetes
      targetPort: 80
